version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: greencart-mongo-prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: greencart
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - greencart-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: greencart-backend-prod
    restart: always
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: ${MONGODB_URI}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE}
      CORS_ORIGIN: ${FRONTEND_URL}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - greencart-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build: 
      context: ./frontend-ts
      dockerfile: Dockerfile
    container_name: greencart-frontend-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - greencart-network
    environment:
      VITE_API_BASE_URL: ${API_BASE_URL}

  # Redis for Caching (Bonus Feature)
  redis:
    image: redis:7-alpine
    container_name: greencart-redis-prod
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - greencart-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mongodb_data:
  redis_data:

networks:
  greencart-network:
    driver: bridge
